{"ast":null,"code":"export const helpHttp = () => {\n  const customFetch = (endpoint, options) => {\n    const defaultHeader = {\n      accept: \"application/json\"\n    };\n    const controller = new AbortController();\n    options.signal = controller.signal;\n    options.method = options.method || \"GET\";\n    options.headers = options.headers ? { ...defaultHeader,\n      ...options.headers\n    } : defaultHeader;\n    options.body = JSON.stringify(options.body) || false;\n    if (!options.body) delete options.body; //console.log(options);\n\n    setTimeout(() => controller.abort(), 3000);\n    return fetch(endpoint, options).then(res => res.ok ? res.json() : Promise.reject({\n      err: true,\n      status: res.status || \"00\",\n      statusText: res.statusText || \"Ocurrió un error\"\n    })).catch(err => err);\n  };\n\n  const get = function (url) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return customFetch(url, options);\n  };\n\n  const post = function (url) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    options.method = \"POST\";\n    return customFetch(url, options);\n  };\n\n  const put = function (url) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    options.method = \"PUT\";\n    return customFetch(url, options);\n  };\n\n  const del = function (url) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    options.method = \"DELETE\";\n    return customFetch(url, options);\n  };\n\n  return {\n    get,\n    post,\n    put,\n    del\n  };\n};","map":{"version":3,"names":["helpHttp","customFetch","endpoint","options","defaultHeader","accept","controller","AbortController","signal","method","headers","body","JSON","stringify","setTimeout","abort","fetch","then","res","ok","json","Promise","reject","err","status","statusText","catch","get","url","post","put","del"],"sources":["/Users/mac/Documents/nuevo/src/helpers/helpHttp.js"],"sourcesContent":["export const helpHttp = () => {\r\n    const customFetch = (endpoint, options) => {\r\n      const defaultHeader = {\r\n        accept: \"application/json\",\r\n      };\r\n  \r\n      const controller = new AbortController();\r\n      options.signal = controller.signal;\r\n  \r\n      options.method = options.method || \"GET\";\r\n      options.headers = options.headers\r\n        ? { ...defaultHeader, ...options.headers }\r\n        : defaultHeader;\r\n  \r\n      options.body = JSON.stringify(options.body) || false;\r\n      if (!options.body) delete options.body;\r\n  \r\n      //console.log(options);\r\n      setTimeout(() => controller.abort(), 3000);\r\n  \r\n      return fetch(endpoint, options)\r\n        .then((res) =>\r\n          res.ok\r\n            ? res.json()\r\n            : Promise.reject({\r\n                err: true,\r\n                status: res.status || \"00\",\r\n                statusText: res.statusText || \"Ocurrió un error\",\r\n              })\r\n        )\r\n        .catch((err) => err);\r\n    };\r\n  \r\n    const get = (url, options = {}) => customFetch(url, options);\r\n  \r\n    const post = (url, options = {}) => {\r\n      options.method = \"POST\";\r\n      return customFetch(url, options);\r\n    };\r\n  \r\n    const put = (url, options = {}) => {\r\n      options.method = \"PUT\";\r\n      return customFetch(url, options);\r\n    };\r\n  \r\n    const del = (url, options = {}) => {\r\n      options.method = \"DELETE\";\r\n      return customFetch(url, options);\r\n    };\r\n  \r\n    return {\r\n      get,\r\n      post,\r\n      put,\r\n      del,\r\n    };\r\n  };"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,MAAM;EAC1B,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuB;IACzC,MAAMC,aAAa,GAAG;MACpBC,MAAM,EAAE;IADY,CAAtB;IAIA,MAAMC,UAAU,GAAG,IAAIC,eAAJ,EAAnB;IACAJ,OAAO,CAACK,MAAR,GAAiBF,UAAU,CAACE,MAA5B;IAEAL,OAAO,CAACM,MAAR,GAAiBN,OAAO,CAACM,MAAR,IAAkB,KAAnC;IACAN,OAAO,CAACO,OAAR,GAAkBP,OAAO,CAACO,OAAR,GACd,EAAE,GAAGN,aAAL;MAAoB,GAAGD,OAAO,CAACO;IAA/B,CADc,GAEdN,aAFJ;IAIAD,OAAO,CAACQ,IAAR,GAAeC,IAAI,CAACC,SAAL,CAAeV,OAAO,CAACQ,IAAvB,KAAgC,KAA/C;IACA,IAAI,CAACR,OAAO,CAACQ,IAAb,EAAmB,OAAOR,OAAO,CAACQ,IAAf,CAdsB,CAgBzC;;IACAG,UAAU,CAAC,MAAMR,UAAU,CAACS,KAAX,EAAP,EAA2B,IAA3B,CAAV;IAEA,OAAOC,KAAK,CAACd,QAAD,EAAWC,OAAX,CAAL,CACJc,IADI,CACEC,GAAD,IACJA,GAAG,CAACC,EAAJ,GACID,GAAG,CAACE,IAAJ,EADJ,GAEIC,OAAO,CAACC,MAAR,CAAe;MACbC,GAAG,EAAE,IADQ;MAEbC,MAAM,EAAEN,GAAG,CAACM,MAAJ,IAAc,IAFT;MAGbC,UAAU,EAAEP,GAAG,CAACO,UAAJ,IAAkB;IAHjB,CAAf,CAJD,EAUJC,KAVI,CAUGH,GAAD,IAASA,GAVX,CAAP;EAWD,CA9BD;;EAgCA,MAAMI,GAAG,GAAG,UAACC,GAAD;IAAA,IAAMzB,OAAN,uEAAgB,EAAhB;IAAA,OAAuBF,WAAW,CAAC2B,GAAD,EAAMzB,OAAN,CAAlC;EAAA,CAAZ;;EAEA,MAAM0B,IAAI,GAAG,UAACD,GAAD,EAAuB;IAAA,IAAjBzB,OAAiB,uEAAP,EAAO;IAClCA,OAAO,CAACM,MAAR,GAAiB,MAAjB;IACA,OAAOR,WAAW,CAAC2B,GAAD,EAAMzB,OAAN,CAAlB;EACD,CAHD;;EAKA,MAAM2B,GAAG,GAAG,UAACF,GAAD,EAAuB;IAAA,IAAjBzB,OAAiB,uEAAP,EAAO;IACjCA,OAAO,CAACM,MAAR,GAAiB,KAAjB;IACA,OAAOR,WAAW,CAAC2B,GAAD,EAAMzB,OAAN,CAAlB;EACD,CAHD;;EAKA,MAAM4B,GAAG,GAAG,UAACH,GAAD,EAAuB;IAAA,IAAjBzB,OAAiB,uEAAP,EAAO;IACjCA,OAAO,CAACM,MAAR,GAAiB,QAAjB;IACA,OAAOR,WAAW,CAAC2B,GAAD,EAAMzB,OAAN,CAAlB;EACD,CAHD;;EAKA,OAAO;IACLwB,GADK;IAELE,IAFK;IAGLC,GAHK;IAILC;EAJK,CAAP;AAMD,CAxDI"},"metadata":{},"sourceType":"module"}